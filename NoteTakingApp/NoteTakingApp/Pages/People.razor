@page "/people"


<PageTitle>Weather forecast</PageTitle>

@using DataLibrary
@using NoteTakingApp.Models
@using Microsoft.Extensions.Configuration

@inject IDataAccess _data
@inject IConfiguration _config



<h1>Note Taking Project</h1>

@*List of Messages*@
@*Filter List Below*@

<EditForm Model=@NoteForm OnSubmit=@FormSubmitted>
    <div class="container">
        <label for="title">Title:</label>
        <InputText @bind-Value=NoteForm.Title class="form-control" id="title" />
        <label for="message">Message:</label>
        <InputTextArea @bind-Value=NoteForm.Message class="form-control" id="message"></InputTextArea>
        <div class="mx-auto" style="margin-top: 10px; margin-bottom: 10px;">
            <button class="btn btn-primary" type="submit" @onclick="@InsertNotes" id="insertButton" style="width: 250px;">Insert</button>
        </div>
    </div>

</EditForm>
@* <input type="submit" value="Submit" class="btn btn-primary" />*@
<h3>Notes</h3>
<table class="table table-bordered">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Title</th>
            <th scope="col">Message</th>
            <th scope="col">Options</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var n in notes)
        {
            <tr>
                <td scope="row"> <p>@n.Id</p></td>
                <td scope="row"> <p>@n.Title</p></td>
                <td scope="row"> <p>@n.Message</p></td>
                <td scope="row">

                    <a href="@($"edit-note/{@n.Id}")" class="btn btn-danger m-1">Edit</a>
                    <a href="@($"delete-note/{@n.Id}")" class="btn btn-warning m-1">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>




@code {

    List<NoteTaking>? notes;

    string Status = "Not submitted";
    NoteTaking NoteForm = new NoteTaking();


    private async Task FormSubmitted()
    {
        Status = "Form submitted";
        // Post data to the server, etc
        await OnInitializedAsync();

    }

    //note taking

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from test.NoteTaking";
        notes = await _data.LoadData<NoteTaking, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }


    private async Task InsertNotes()
    {
        string sql = "insert into test.NoteTaking (Title, Message) values (@Title, @Message);";
        await _data.SaveData(sql, new { Title = @NoteForm.Title, Message = NoteForm.Message }, _config.GetConnectionString("default"));
        await OnInitializedAsync();

    }


    private async Task DeleteNote(int Id)
    {
        string sql = "delete from Test.NoteTaking where Id=@Id";
        await _data.SaveData(sql, new { Id = @Id }, _config.GetConnectionString("default"));
        await OnInitializedAsync();

    }

    protected async Task Submit()
    {
        await DeleteNote(NoteForm.Id);
    }

}


